---
- name: Deploy on OpenStack
  hosts: localhost

  gather_facts: false
  vars_files:
    - vars/main.yml

  tasks:
    - name: Install keypair for instance
      os_keypair:
        cloud: "{{ cloud_name }}"
        name: "{{ cloud_key_name }}"
        public_key_file: "{{ public_key_file_path }}"

    - name: Open ICMP in default security group
      os_security_group_rule:
          cloud: "{{ cloud_name }}"
          security_group: "default"
          protocol: icmp
          port_range_min: -1
          port_range_max: -1
          remote_ip_prefix: 0.0.0.0/0

    - name: Open SSH in default security group
      os_security_group_rule:
          cloud: "{{ cloud_name }}"
          security_group: "default"
          protocol: tcp
          port_range_min: 22
          port_range_max: 22
          remote_ip_prefix: 0.0.0.0/0

    - name: Deploy an instance
      os_server:
        state: present
        name: "{{ cloud_name_prefix }}-{{ item.name }}"
        cloud: "{{ cloud_name }}"
        region_name: "{{ cloud_region_name }}"
        availability_zone: "{{ cloud_availability_zone }}"
        image: "{{ cloud_image }}"
        boot_from_volume: true
        terminate_volume: true
        volume_size: 8
        flavor: "{{ cloud_flavor }}"
        key_name: "{{ cloud_key_name }}"
        network: private
        security_groups: "{{ item.security_groups }}"
        floating_ip_pools: public
        timeout: 300
      register: instances
      with_items: "{{ instance_list }}"

    - debug:
        var: instances
        verbosity: 1

    - name: Validate the host is available
      command: >
        ssh -o BatchMode=yes -o StrictHostKeyChecking=no
        centos@{{ item.server.public_v4 }}
      register: result
      until: result|success
      retries: 300
      delay: 5
      with_items: "{{ instances.results }}"
      changed_when: false

    - name: Add host to inventory
      add_host:
        name: "{{ item.item.name }}"
        groups: "{{ item.item.name }}"
        ansible_host: "{{ item.server.public_v4 }}"
        ansible_user: centos
        ansible_become: true
      with_items: "{{ instances.results }}"

